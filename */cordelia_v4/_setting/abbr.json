{
  "single_words": {
    "fill": "fillarray",
    "beats": "gkbeats",
    "bs": "gkbeats",
    "beatms": "gkbeatms",
    "bms": "gkbeatms",
    "wn": "gkbeats*4",
    "hn": "gkbeats*2",
    "qn": "gkbeats",
    "en": "gkbeats/2",
    "sn": "gkbeats/4",
    "beatf": "gkbeatf",
    "bf": "gkbeatf",
    "wf": "gkbeatf*4",
    "hf": "gkbeatf*2",
    "qf": "gkbeatf",
    "ef": "gkbeatf/2",
    "sf": "gkbeatf/4"
  },
  "complex_words": {
    "(\\W)\\?(\\W|$)": "random:k(0, 1)",

    "(\\W)in(\\d+)q(\\W|$)": "\\1come_in_q(\\2)\\3",
    "(\\W)in(\\d+)m(\\W|$)": "\\1come_in_q(\\2*4)\\3",
    "(\\W)in(\\d+)s(\\W|$)": "\\1come_in_s(\\2)\\3",

    "(\\W)out(\\d+)q(\\W|$)": "\\1come_in_q(-\\2)\\3",
    "(\\W)out(\\d+)m(\\W|$)": "\\1come_in_q(-\\2*4)\\3",
    "(\\W)out(\\d+)s(\\W|$)": "\\1come_in_s(-\\2)\\3",

    "(\\W)ix(\\d+)q(\\W|$)": "\\1exist_in_q(\\2)\\3",
    "(\\W)ix(\\d+)m(\\W|$)": "\\1exist_in_q(\\2*4)\\3",

    "(\\W)ex(\\d+)q(\\W|$)": "\\1exist_in_q(-\\2)\\3",
    "(\\W)ex(\\d+)m(\\W|$)": "\\1exist_in_q(-\\2*4)\\3",
    
    "(\\W)(\\d+)>(\\d+)in(\\d+)q(\\W|$)": "\\1come_in_q(\\2, \\4, \\3)\\5",
    "(\\W)(\\d+)>(\\d+)in(\\d+)m(\\W|$)": "\\1come_in_q(\\2, \\4*4, \\3)\\5",
    "(\\W)(\\d+)>(\\d+)in(\\d+)s(\\W|$)": "\\1come_in_s(\\2, \\4, \\3)\\5",

    "(\\W)(\\d+)<(\\d+)in(\\d+)q(\\W|$)": "\\1come_in_q(\\3, -\\4, \\2)\\5",
    "(\\W)(\\d+)<(\\d+)in(\\d+)m(\\W|$)": "\\1come_in_q(\\3, -\\4*4, \\2)\\5",
    "(\\W)(\\d+)<(\\d+)in(\\d+)s(\\W|$)": "\\1come_in_s(\\3, -\\4, \\2)\\5"
  }
}
